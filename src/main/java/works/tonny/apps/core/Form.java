package works.tonny.apps.core;

// Generated 2012-7-17 9:34:17 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import works.tonny.apps.Entity;

/**
 * Form generated by hbm2java
 * 
 * @author Tonny Liu
 */
@javax.persistence.Entity
@Table(name = "fr_form")
public class Form extends Entity {
	/**
	 * @Fields serialVersionUID :
	 */
	private static final long serialVersionUID = 1L;

	private String name;
	private String title;
	private String info;
	private String catelog;
	private Date updateTime;
	private String admin;
	private Set<FormElement> formElements = new HashSet<FormElement>(0);
	private List<FormValue> formValues;

	private Map<String, String> values;

	private Map<String, FormElement> elements;

	public Form() {
	}

	public Form(String id, String name) {
		setId(id);
		setName(name);
	}

	public Form(String id, String name, String title, String info, String catelog, Date updateTime, String admin) {
		setId(id);
		setName(name);
		setTitle(title);
		setInfo(info);
		setCatelog(catelog);
		setUpdateTime(updateTime);
		setAdmin(admin);
	}

	/**
	 * {@inheritDoc}
	 * 
	 * @see works.tonny.apps.Entity#getId()
	 */
	@Id
	@GeneratedValue(generator = "idGenerator")
	@GenericGenerator(name = "idGenerator", strategy = "uuid")
	@Column(length = 50)
	public String getId() {
		return super.getId();
	}

	/**
	 * 通过名称获取值
	 * 
	 * @param elementName
	 * @return
	 */
	@Transient
	public String getValue(String elementName) {
		return getValues().get(elementName);
	}

	@Column(length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(length = 50)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(length = 600)
	public String getInfo() {
		return this.info;
	}

	public void setInfo(String info) {
		this.info = info;
	}

	@Column(length = 50)
	public String getCatelog() {
		return this.catelog;
	}

	public void setCatelog(String catelog) {
		this.catelog = catelog;
	}

	@Column(name = "update_time")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(length = 50)
	public String getAdmin() {
		return this.admin;
	}

	public void setAdmin(String admin) {
		this.admin = admin;
	}

	@OneToMany(mappedBy = "form")
	public Set<FormElement> getFormElements() {
		return formElements;
	}

	public void setFormElements(Set<FormElement> formElements) {
		this.formElements = formElements;
		elements = new HashMap<String, FormElement>();
		sync(formElements);
	}

	/**
	 * @param formElements
	 */
	public void sync(Set<FormElement> formElements) {
		
		for (FormElement formElement : formElements) {
			elements.put(formElement.getName(), formElement);
		}
	}

	@Transient
	public List<FormValue> getFormValues() {
		return formValues;
	}

	public void setFormValues(List<FormValue> formValues) {
		this.formValues = formValues;
	}

	@Transient
	public Map<String, String> getValues() {
		if (values == null) {
			values = new HashMap<String, String>();
			for (FormValue value : formValues) {
				values.put(value.getFormElement().getName(), value.getValue());
			}
		}
		return values;
	}

	public void setValues(Map<String, String> values) {
		this.values = values;
	}

	@Transient
	public Map<String, FormElement> getElements() {
		if (elements == null && formElements != null) {
			elements = new HashMap<String, FormElement>();
			sync(formElements);
		}else if(elements.isEmpty() && !formElements.isEmpty()){
			sync(formElements);
		}
		return elements;
	}

}
