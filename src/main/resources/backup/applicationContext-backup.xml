<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">




    <bean id="backupSessionFactoryManager"
          class="works.tonny.apps.deploy.AnnotationSessionFactoryManagerFactory">
        <property name="writeDataSource" value="dataSource" />
        <!-- property name="readDataSource" value="readDataSource" / -->
        <property name="lobHandler" ref="lobHandler" />
        <property name="schemaService" ref="schemaManager" />
        <!-- -->
        <property name="mappingLocations">
            <list>
                <value>classpath*:backup/*.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.cache.provider_class">
                    org.hibernate.cache.EhCacheProvider
                </prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.poolPreparedStatements">true</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.default_schema">${db.id}</prop>
                <prop key="hibernate.query.imports">net.sf.hibernate.test, net.sf.hibernate.eg</prop>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.proxool.pool_alias">pool1</prop>
                <prop key="hibernate.use_outer_join">true</prop>
                <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
                <prop key="hibernate.use_query_cache">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.hbm2ddl.auto">${db.ddl.auto}</prop>
                <prop key="hibernate.show_sql">${db.showsql}</prop>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory
                </prop>
                <prop key="hibernate.statement_cache.size">25</prop>
            </props>
        </property>
    </bean>


    <bean id="backupTx" class="works.tonny.apps.support.HibernateTransactionManager">
        <property name="factoryManager" ref="backupSessionFactoryManager" />
    </bean>
    <tx:annotation-driven transaction-manager="tx" />

    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <value>*Service</value>
        </property>
        <property name="interceptorNames">
            <list>
                <!-- value>txInterceptor</value -->
                <value>authVerifyAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="backupBaseDAO" class="works.tonny.apps.support.SpringHibernateDAO"
          scope="prototype">
        <property name="sessionFactoryManager" ref="backupSessionFactoryManager" />
    </bean>
    <bean id="backupBaseDAOSupport" class="works.tonny.apps.support.BaseDAOSupport"
          scope="prototype">
        <property name="dao" ref="backupBaseDAO" />
        <property name="sqlMappingManager" ref="sqlMappingManager" />
    </bean>


    <bean name="backupService" class="works.tonny.apps.backup.impl.DataBackupServiceImpl">
        <property name="daoSupport" ref="backupBaseDAO"/>
        <property name="dir" value="${webroot}/backup"/>
    </bean>

</beans>
